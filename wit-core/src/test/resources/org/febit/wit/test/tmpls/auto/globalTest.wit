<%

{
    //global
    $GLOBAL["aaa"] = "AAA";
    $GLOBAL["bbb"] = "BBB";

    assertNotNull($GLOBAL);
    assertEquals($GLOBAL["aaa"], "AAA");
    assertEquals($GLOBAL["bbb"], "BBB");
}

{
    // custom defined in `TestGlobalRegister`

    assertEquals("MY_CONST", MY_CONST);
    assertEquals("MY_CONST_2", MY_CONST_2);
    assertEquals("MY_GLOBAL", MY_GLOBAL);
    assertEquals("MY_GLOBAL_2", MY_GLOBAL_2);

    MY_GLOBAL = "a new value";
    assertEquals("a new value", MY_GLOBAL);
}
{
    // defined in ConstMethods
    assertEquals("CONST_FIELD", CONST_FIELD);
    assertEquals("CONST_METHOD", CONST_METHOD());

    assertNotNull(constEmpty);
    assertEquals("constEmpty", constEmpty());
    assertNotNull(constVoid);
    assertEquals(CONST_METHOD, constMethod());

    assertEquals(3, constSize("wit"));
    assertEquals(4, constSize(["hello"," ","wit","!"]));
    assertEquals(2, constSize({"name":"wit","say":"hi!"}));
}
{
    var me = new_ConstMethods2();
    assertEquals("const2Foo", const2Foo(me));
    assertEquals("const2MemberString", const2Member(me,""));
    assertEquals("const2MemberObject", const2Member(me,1));
    
    assertEquals(3, const2Size(me,"wit"));
    assertEquals(4, const2Size(me,["hello"," ","wit","!"]));
    assertEquals(2, const2Size(me,{"name":"wit","say":"hi!"}));
}
{
    // custom defined in "/init.wit"

    assertEquals($GLOBAL["one"], 1);
    assertEquals($GLOBAL["string"], "string");

    assertEquals(g_one, 1);
    assertEquals(g_string, "g_string");

    assertEquals(c_one, 1);
    assertEquals(c_string, "c_string");

    //parseException: c_one = 2;
}

{
    // custom defined in "/init2.wit"

    assertEquals($GLOBAL["two"], 2);
    assertEquals($GLOBAL["string2"], "string2");

    assertEquals(g_two, 2);
    assertEquals(g_string2, "g_string2");

    assertEquals(c_two, 2);
    assertEquals(c_string2, "c_string2");
}

%>
<%

var check = function(lambda){
    var count = 0;
    for(i : 1..10){
        count++;
        if((i > 2 || i < 8) != lambda(i)){
            return false;
        }
    }
    return count == 10;
};

var check2 = function(lambda){
    var count = 0;
    for(i : 1..10){
        count++;
        if((i > 2 || i < 8) != lambda(i, 2)){
            return false;
        }
    }
    return true;
};

var check3 = function(lambda){
    var count = 0;
    for(i : 1..10){
        count++;
        if((i > 2 || i < 8) != lambda(i, 2, 8)){
            return false;
        }
    }
    return true;
};

assertEquals(0, (()->0)());
assertEquals(0, (()->{ return 0; })());

//XXX: Oops one, return an empty map!
assertEquals({}, (()->{})());

assertTrue(check(x -> x > 2 || x < 8));
assertTrue(check(x -> (x > 2 || x < 8)));
assertTrue(check(x -> {return x > 2 || x < 8;}));
assertTrue(check(x -> {var temp = x > 2; return temp || x < 8;}));

assertTrue(check2((x, y) -> x > y || x < 8));
assertTrue(check2((x, y) -> (x > y || x < 8)));
assertTrue(check2((x, y) -> {return x > y || x < 8;}));
assertTrue(check2((x, y) -> {var temp = x > y; return temp || x < 8;}));

assertTrue(check3((x, y, z) -> x > y || x < z));
assertTrue(check3((x, y, z) -> (x > y || x < z)));
assertTrue(check3((x, y, z) -> {return x > y || x < z;}));
assertTrue(check3((x, y, z) -> {var temp = x > y; return temp || x < z;}));

%>